1. sp_who or sp_who2
SP_WHO2 ACTIVE

2.【MS SQL】通过执行计划来分析SQL性能,如何知道一句SQL语句的执行效率呢，只知道下面3种：
1)、通过SQL语句执行时磁盘的活动量(IO)信息来分析：SET STATISTICS IO ON (开启) / SET STATISTICS IO OFF (关闭)
2)、通过SQL语句执行时语法分析、编译以及执行所消耗的时间：SET STATISTICS TIME ON (开启) / SET STATISTICS TIME OFF (关闭)
3)、通过执行计划查看：Ctrl + L

2. MS sql chinese chart
begin tran
  create table #tmptbl(
      username1 nvarchar(2) ,
	    username2 varchar(2)
  )
  insert into #tmptbl values(N'你','你')
  insert into #tmptbl values(N'你我','你我')
  select * from #tmptbl  
rolllback
go
drop table #tmptbl
go
username1	username2
你	?
你我	??

3. 使用 @@TRANCOUNT
https://docs.microsoft.com/zh-cn/sql/t-sql/functions/trancount-transact-sql

在SqlServer里，嵌套事务的层次是由@@TranCount全局变量反映出来的。

每一次Begin Transaction都会引起@@TranCount加1。而每一次Commit Transaction都会使@@TranCount减1，而RollBack Transaction会回滚所有的嵌套事务包括已经提交的事务和未提交的事务，而使@@TranCount置0。

例如: 
 BEGIN   TRAN   --@@TRANCOUNT值为0   
      SELECT  @@TRANCOUNT         --值为1   
          BEGIN   TRAN     
                SELECT  @@TRANCOUNT     --值为2    
          COMMIT   TRAN   
          SELECT @@TRANCOUNT   --值为1   
  ROLLBACK   TRAN   
  SELECT  @@TRANCOUNT   --值为0
  
4. 使用 @@ERROR
https://msdn.microsoft.com/zh-cn/library/ms190193(SQL.90).aspx
@@error是系统函数，当没有发生错误时返回0，如果发生错误时@@error<>0，并返回错误号，每个SQL语句执行完，@@error值都会变。
if you want to keep the error code, you can use a local variable to store it.

5. Transact-SQL 中使用 TRY...CATCH
https://msdn.microsoft.com/zh-cn/library/ms179296(v=sql.90).aspx

CATCH 块中的代码可以通过使用 XACT_STATE 函数来测试事务的状态。如果会话中包含无法提交的事务，XACT_STATE 将返回 -1。如果 XACT_STATE 返回 -1，则 CATCH 块将不能执行写日志的任何操作。

6.XACT_STATE (Transact-SQL)
https://docs.microsoft.com/zh-cn/sql/t-sql/functions/xact-state-transact-sql

1	当前请求有活动的用户事务。 请求可以执行任何操作，包括写入数据和提交事务。
0	当前请求没有活动的用户事务。
-1	当前请求具有活动的用户事务，但出现了致使事务被归类为无法提交的事务的错误。 请求无法提交事务或回滚到保存点；它只能请求完全回滚事务。 请求在回滚事务之前无法执行任何写操作。 请求在回滚事务之前只能执行读操作。 事务回滚之后，请求便可执行读写操作并可开始新的事务。

7. alter table
alter table tableName alter column columnName varchar(40)
alter table tableName add columnName datetime
Execute sp_rename 'amy."his table"','"her table"','object'

tempdb..SP_HELP #temptable

8. Case sensitive
select T1.* from tableName T1,tableName T2
WHERE T1.addrcode=t2.addrcode
and T1.addr_4<>UPPER(T1.addr_4)
COLLATE chinese_prc_bin
UNION
select T1.* from tableName T1,tableName T2
WHERE T1.addrcode=t2.addrcode
and T1.addr_4<>UPPER(T1.addr_4)
COLLATE Latin1_General_CS_AS

9. table depends
sp_depends搜索 'tablename'

10. Create table
CREATE TABLE [dbo].[tableName](
columnName varchar(10),
CONSTRAINT PK_tableName PRIMARY KEY(columnName)			
)
CREATE INDEX INX_tableName ON [dbo].[tableName](columnName)

drop index: drop index index_name  on table_name

Add primary key:
ALTER TABLE table_name ADD CONSTRAINT primary_key_name PRIMARY KEY(column1, column2……);
ALTER TABLE dbo.table_name DROP CONSTRAINT primary_key_name


11. Cursor
    DECLARE product_cursor CURSOR 
    FOR SELECT v.Name  
    FROM Purchasing.ProductVendor pv, Production.Product v  
    WHERE pv.ProductID = v.ProductID AND  pv.VendorID = @vendor_id 
    
    OPEN product_cursor  
    FETCH NEXT FROM product_cursor INTO @product  

    IF @@FETCH_STATUS <> 0   
        PRINT '         <<None>>'       

    WHILE @@FETCH_STATUS = 0  
    BEGIN
        SELECT @message = '         ' + @product  
        PRINT @message  
        FETCH NEXT FROM product_cursor INTO @product  
    END 
    CLOSE product_cursor  
    DEALLOCATE product_cursor  
  
12. Trigger
sp_helptrigger tableName

13. FOR XML PATH
UPDATE T1 SET T1.PARM1=(select convert(varchar,STRTMPFIELD01)+',' from 
                       (
			     select distinct CODE,CODE2,BODDATE,USERID,INTTMPFIELD01 from #TMP_USERLOG 
                       ) A1 
                       where A1.CODE=T1.CODE and A1.CODE2=T1.CODE2 and A1.BODDATE=T1.BODDATE and A1.USERID=T1.USERID for xml path('')) 
FROM #TMP_USERLOG T1

14. Date Type : decimal
(
decimalA decimal(1,1),  --The scale must be less than or equal to precision
decimalD decimal(4,4),
decimalD0 decimal(4,0),
decimalH decimal(8,5),
decimalI decimal(9,5),    --Length: 5
decimalJ decimal(10,5),   --Length: 9
decimalN decimal(19,5),   --Length: 9
decimalO decimal(20,5),   --Length: 13
decimalP decimal(28,5),   --Length: 13
decimalQ decimal(29,5),   --Length: 17
decimalR decimal(30,5),   --Length: 17
decimalS decimal(38,5),   --Length: 17  : Specified column precision 40 is greater than the maximum precision of 38.
)
go
sp_help decimalChk
go
-- decimal(38,5): Precision=38, Scale = 5
-- Length: Byte(字节数) = 8 bit(位)
精度   存储字节数  
1 - 9	 5
10-19	 9
20-28	13
29-38	17
   
15. SET ANSI_NULLS OFF
select ISNULL(@A,'')='' Return true
